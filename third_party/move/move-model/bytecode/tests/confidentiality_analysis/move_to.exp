============ initial translation from Move ================

[variant baseline]
fun MoveTo::move_to_P_no_specs_while_pc_P($t0|account: &signer) {
     var $t1: &signer
     var $t2: u64
     var $t3: MoveTo::T2
  0: $t1 := move($t0)
  1: $t2 := 0
  2: $t3 := pack MoveTo::T2($t2)
  3: move_to<MoveTo::T2>($t3, $t1)
  4: return ()
}


[variant baseline]
fun MoveTo::move_to_P_no_specs_while_pc_S($t0|account: &signer, $t1|x: u64) {
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &signer
     var $t6: u64
     var $t7: MoveTo::T2
     var $t8: &signer
  0: $t2 := move($t1)
  1: $t3 := 0
  2: $t4 := >($t2, $t3)
  3: if ($t4) goto 4 else goto 10
  4: label L1
  5: $t5 := move($t0)
  6: $t6 := 0
  7: $t7 := pack MoveTo::T2($t6)
  8: move_to<MoveTo::T2>($t7, $t5)
  9: goto 14
 10: label L0
 11: $t8 := move($t0)
 12: drop($t8)
 13: goto 14
 14: label L2
 15: return ()
}


[variant baseline]
fun MoveTo::move_to_P_with_specs_while_pc_P_incorrect($t0|account: &signer) {
     var $t1: &signer
     var $t2: u64
     var $t3: MoveTo::T1
  0: $t1 := move($t0)
  1: $t2 := 0
  2: $t3 := pack MoveTo::T1($t2)
  3: move_to<MoveTo::T1>($t3, $t1)
  4: return ()
}


[variant baseline]
fun MoveTo::move_to_P_with_specs_while_pc_S($t0|account: &signer, $t1|x: u64) {
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &signer
     var $t6: u64
     var $t7: MoveTo::T1
     var $t8: &signer
  0: $t2 := move($t1)
  1: $t3 := 0
  2: $t4 := >($t2, $t3)
  3: if ($t4) goto 4 else goto 10
  4: label L1
  5: $t5 := move($t0)
  6: $t6 := 0
  7: $t7 := pack MoveTo::T1($t6)
  8: move_to<MoveTo::T1>($t7, $t5)
  9: goto 14
 10: label L0
 11: $t8 := move($t0)
 12: drop($t8)
 13: goto 14
 14: label L2
 15: return ()
}


[variant baseline]
fun MoveTo::move_to_S_no_specs_while_pc_P_incorrect($t0|account: &signer, $t1|s: MoveTo::T2) {
     var $t2: &signer
     var $t3: MoveTo::T2
  0: $t2 := move($t0)
  1: $t3 := move($t1)
  2: move_to<MoveTo::T2>($t3, $t2)
  3: return ()
}


[variant baseline]
fun MoveTo::move_to_S_no_specs_while_pc_S($t0|account: &signer, $t1|s: MoveTo::T2, $t2|x: u64) {
     var $t3: u64
     var $t4: u64
     var $t5: bool
     var $t6: &signer
     var $t7: MoveTo::T2
     var $t8: &signer
  0: $t3 := move($t2)
  1: $t4 := 0
  2: $t5 := >($t3, $t4)
  3: if ($t5) goto 4 else goto 9
  4: label L1
  5: $t6 := move($t0)
  6: $t7 := move($t1)
  7: move_to<MoveTo::T2>($t7, $t6)
  8: goto 13
  9: label L0
 10: $t8 := move($t0)
 11: drop($t8)
 12: goto 13
 13: label L2
 14: return ()
}


[variant baseline]
fun MoveTo::move_to_S_with_specs_while_pc_P_incorrect($t0|account: &signer, $t1|s: MoveTo::T1) {
     var $t2: &signer
     var $t3: MoveTo::T1
  0: $t2 := move($t0)
  1: $t3 := move($t1)
  2: move_to<MoveTo::T1>($t3, $t2)
  3: return ()
}


[variant baseline]
fun MoveTo::move_to_S_with_specs_while_pc_S($t0|account: &signer, $t1|s: MoveTo::T1, $t2|x: u64) {
     var $t3: u64
     var $t4: u64
     var $t5: bool
     var $t6: &signer
     var $t7: MoveTo::T1
     var $t8: &signer
  0: $t3 := move($t2)
  1: $t4 := 0
  2: $t5 := >($t3, $t4)
  3: if ($t5) goto 4 else goto 9
  4: label L1
  5: $t6 := move($t0)
  6: $t7 := move($t1)
  7: move_to<MoveTo::T1>($t7, $t6)
  8: goto 13
  9: label L0
 10: $t8 := move($t0)
 11: drop($t8)
 12: goto 13
 13: label L2
 14: return ()
}

============ after pipeline `confidentiality_analysis` ================

[variant baseline]
fun MoveTo::move_to_P_no_specs_while_pc_P($t0|account: &signer) {
     var $t1: &signer
     var $t2: u64
     var $t3: MoveTo::T2
  0: $t1 := move($t0)
  1: $t2 := 0
  2: $t3 := pack MoveTo::T2($t2)
  3: move_to<MoveTo::T2>($t3, $t1)
  4: return ()
}


[variant baseline]
fun MoveTo::move_to_P_no_specs_while_pc_S($t0|account: &signer, $t1|x: u64) {
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &signer
     var $t6: u64
     var $t7: MoveTo::T2
     var $t8: &signer
  0: $t2 := move($t1)
  1: $t3 := 0
  2: $t4 := >($t2, $t3)
  3: if ($t4) goto 4 else goto 10
  4: label L1
  5: $t5 := move($t0)
  6: $t6 := 0
  7: $t7 := pack MoveTo::T2($t6)
  8: move_to<MoveTo::T2>($t7, $t5)
  9: goto 14
 10: label L0
 11: $t8 := move($t0)
 12: drop($t8)
 13: goto 14
 14: label L2
 15: return ()
}


[variant baseline]
fun MoveTo::move_to_P_with_specs_while_pc_P_incorrect($t0|account: &signer) {
     var $t1: &signer
     var $t2: u64
     var $t3: MoveTo::T1
  0: $t1 := move($t0)
  1: $t2 := 0
  2: $t3 := pack MoveTo::T1($t2)
  3: move_to<MoveTo::T1>($t3, $t1)
  4: return ()
}


[variant baseline]
fun MoveTo::move_to_P_with_specs_while_pc_S($t0|account: &signer, $t1|x: u64) {
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &signer
     var $t6: u64
     var $t7: MoveTo::T1
     var $t8: &signer
  0: $t2 := move($t1)
  1: $t3 := 0
  2: $t4 := >($t2, $t3)
  3: if ($t4) goto 4 else goto 10
  4: label L1
  5: $t5 := move($t0)
  6: $t6 := 0
  7: $t7 := pack MoveTo::T1($t6)
  8: move_to<MoveTo::T1>($t7, $t5)
  9: goto 14
 10: label L0
 11: $t8 := move($t0)
 12: drop($t8)
 13: goto 14
 14: label L2
 15: return ()
}


[variant baseline]
fun MoveTo::move_to_S_no_specs_while_pc_P_incorrect($t0|account: &signer, $t1|s: MoveTo::T2) {
     var $t2: &signer
     var $t3: MoveTo::T2
  0: $t2 := move($t0)
  1: $t3 := move($t1)
  2: move_to<MoveTo::T2>($t3, $t2)
  3: return ()
}


[variant baseline]
fun MoveTo::move_to_S_no_specs_while_pc_S($t0|account: &signer, $t1|s: MoveTo::T2, $t2|x: u64) {
     var $t3: u64
     var $t4: u64
     var $t5: bool
     var $t6: &signer
     var $t7: MoveTo::T2
     var $t8: &signer
  0: $t3 := move($t2)
  1: $t4 := 0
  2: $t5 := >($t3, $t4)
  3: if ($t5) goto 4 else goto 9
  4: label L1
  5: $t6 := move($t0)
  6: $t7 := move($t1)
  7: move_to<MoveTo::T2>($t7, $t6)
  8: goto 13
  9: label L0
 10: $t8 := move($t0)
 11: drop($t8)
 12: goto 13
 13: label L2
 14: return ()
}


[variant baseline]
fun MoveTo::move_to_S_with_specs_while_pc_P_incorrect($t0|account: &signer, $t1|s: MoveTo::T1) {
     var $t2: &signer
     var $t3: MoveTo::T1
  0: $t2 := move($t0)
  1: $t3 := move($t1)
  2: move_to<MoveTo::T1>($t3, $t2)
  3: return ()
}


[variant baseline]
fun MoveTo::move_to_S_with_specs_while_pc_S($t0|account: &signer, $t1|s: MoveTo::T1, $t2|x: u64) {
     var $t3: u64
     var $t4: u64
     var $t5: bool
     var $t6: &signer
     var $t7: MoveTo::T1
     var $t8: &signer
  0: $t3 := move($t2)
  1: $t4 := 0
  2: $t5 := >($t3, $t4)
  3: if ($t5) goto 4 else goto 9
  4: label L1
  5: $t6 := move($t0)
  6: $t7 := move($t1)
  7: move_to<MoveTo::T1>($t7, $t6)
  8: goto 13
  9: label L0
 10: $t8 := move($t0)
 11: drop($t8)
 12: goto 13
 13: label L2
 14: return ()
}

============ Diagnostics ================
warning: Data leak via moveTo of local 2
   ┌─ tests/confidentiality_analysis/move_to.move:17:5
   │
17 │ ╭     fun move_to_S_no_specs_while_pc_P_incorrect(account: &signer, s: T2) {
18 │ │         move_to(account, s)
19 │ │     }
   │ ╰─────^

warning: Data leak via moveTo of local 2
   ┌─ tests/confidentiality_analysis/move_to.move:36:5
   │
36 │ ╭     fun move_to_S_with_specs_while_pc_P_incorrect(account: &signer, s: T1) {
37 │ │         move_to(account, s)
38 │ │     }
   │ ╰─────^

warning: Data leak via moveTo of local 1
   ┌─ tests/confidentiality_analysis/move_to.move:40:5
   │
40 │ ╭     fun move_to_P_with_specs_while_pc_P_incorrect(account: &signer) {
41 │ │         // p is P but has specs
42 │ │         let p = T1 { y: 0 };
43 │ │         move_to(account, p)
44 │ │     }
   │ ╰─────^
